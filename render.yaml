# Render Blueprint for Roomies backend + Postgres
# Docs: https://render.com/docs/blueprint-spec

services:
  - type: web
    name: roomies-backend
    env: node
    rootDir: roomies-backend
    buildCommand: npm ci --omit=optional && npm run build
    startCommand: npm start
    plan: starter
    autoDeploy: true
    healthCheckPath: /health
    envVars:
      - key: NODE_ENV
        value: production
      - key: JWT_SECRET
        generateValue: true
      # Provide DATABASE_URL from an external free Postgres (e.g., Neon/Supabase) in the Render Dashboard after creating the service.
      # Example Neon URL: postgres://user:password@host/db?sslmode=require
      # - key: DATABASE_URL
      #   value: <set-in-dashboard>
      - key: DATABASE_SSL
        value: "true"

      # First deploy: let TypeORM create tables automatically
      - key: DB_SYNCHRONIZE
        value: "false"

      # CloudKit (enable when ready)
      - key: CLOUDKIT_ENABLED
        value: "true"
      - key: CLOUDKIT_CONTAINER_ID
        value: iCloud.de.roomies.HouseholdApp

      # Optional Web Services (set when you have Apple key)
      - key: CLOUDKIT_USE_WEB_SERVICES
        value: "false"
      # - key: CLOUDKIT_ENV
      #   value: production
      # - key: CLOUDKIT_KEY_ID
      #   value: <your_apple_key_id>
      # - key: CLOUDKIT_PRIVATE_KEY
      #   value: "-----BEGIN PRIVATE KEY-----\n...\n-----END PRIVATE KEY-----\n"

      # Apple Sign-In
      - key: APP_BUNDLE_ID
        value: de.roomies.HouseholdApp

# Note: No managed Postgres defined here to avoid monthly cost.
# Use a free external Postgres (Neon/Supabase/ElephantSQL) and set DATABASE_URL in the service Environment.
