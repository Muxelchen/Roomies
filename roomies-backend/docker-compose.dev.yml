version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: roomies-postgres-dev
    environment:
      POSTGRES_USER: roomies_user
      POSTGRES_PASSWORD: secure_password
      POSTGRES_DB: roomies_dev
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - roomies-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U roomies_user -d roomies_dev"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: arm64v8/redis:7-alpine
    container_name: roomies-redis-dev
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - roomies-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
    sysctls:
      - net.core.somaxconn=1024

  # Redis Commander (Web UI for Redis)
  redis-commander:
    image: rediscommander/redis-commander:latest
    platform: linux/amd64
    container_name: roomies-redis-commander
    environment:
      REDIS_HOSTS: local:redis:6379
      REDIS_HOST: redis
      REDIS_PORT: 6379
    ports:
      - "8081:8081"
    networks:
      - roomies-network
    depends_on:
      - redis
    restart: unless-stopped

  # Roomies Backend Application
  backend:
    image: node:18-alpine
    container_name: roomies-backend-dev
    # Note: env_file intentionally removed for local dev to avoid parsing issues with multiline keys
    # If you need to load secrets, ensure .env.secure uses properly quoted values and re-add:
    # env_file:
    #   - .env.secure
    working_dir: /app
    environment:
      NODE_ENV: development
      PORT: 3000
      DATABASE_URL: postgresql://roomies_user:secure_password@postgres:5432/roomies_dev
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USERNAME: roomies_user
      DB_PASSWORD: secure_password
      DB_DATABASE: roomies_dev
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_DB: 0
      REDIS_KEY_PREFIX: "roomies:dev:"
      JWT_SECRET: dev-jwt-secret-change-in-production
      CLIENT_URL: http://localhost:3000
      LOG_LEVEL: debug
      ENABLE_DEBUG_ENDPOINTS: true
      ENABLE_SAMPLE_DATA: true
      # Email configuration (optional for local)
      EMAIL_FROM: roomiesappteam@gmail.com
      # For Gmail, you can use service + app password (recommended):
      # SMTP_SERVICE: gmail
      # SMTP_USER: roomiesappteam@gmail.com
      # SMTP_PASS: your_app_password
      # Or explicit SMTP host config:
      # SMTP_HOST: smtp.example.com
      # SMTP_PORT: 587
      # SMTP_SECURE: 'false'
    ports:
      - "3001:3000"
    volumes:
      - .:/app
      - /app/node_modules
      - ./logs:/app/logs
    networks:
      - roomies-network
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped
    command: sh -lc "npm ci && npm run dev"
    healthcheck:
      test: ["CMD-SHELL", "node -e \"require('http').get('http://localhost:3000/health',r=>{process.exit(r.statusCode===200?0:1)}).on('error',()=>process.exit(1))\""]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # pgAdmin for PostgreSQL management
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: roomies-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@roomies.local
      PGADMIN_DEFAULT_PASSWORD: admin
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "8080:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - roomies-network
    depends_on:
      - postgres
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local
    name: roomies-postgres-data
  redis_data:
    driver: local  
    name: roomies-redis-data
  pgadmin_data:
    driver: local
    name: roomies-pgadmin-data

networks:
  roomies-network:
    driver: bridge
    name: roomies-dev-network
    ipam:
      config:
        - subnet: 172.20.0.0/16
