user  nginx;
worker_processes  auto;

events {
  worker_connections  1024;
}

http {
  include       /etc/nginx/mime.types;
  default_type  application/octet-stream;
  sendfile      on;
  tcp_nopush    on;
  tcp_nodelay   on;
  keepalive_timeout 65;
  server_tokens off;

  # Upstream to Node app service name in docker-compose.prod.yml
  upstream app_upstream {
    server app:3000;
    keepalive 64;
  }

  map $http_upgrade $connection_upgrade {
    default upgrade;
    ''      close;
  }

  # Redirect all HTTP to HTTPS
  server {
    listen 80;
    listen [::]:80;
    server_name _;

    # Allow ACME HTTP-01 challenges (optional)
    location /.well-known/acme-challenge/ {
      root /var/www/certbot;
    }

    location / {
      return 301 https://$host$request_uri;
    }
  }

  # HTTPS server
  server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name _;

    # TLS certs mounted from ./nginx/ssl
    ssl_certificate     /etc/nginx/ssl/fullchain.pem;
    ssl_certificate_key /etc/nginx/ssl/privkey.pem;
    ssl_protocols       TLSv1.2 TLSv1.3;
    ssl_ciphers         HIGH:!aNULL:!MD5;
    ssl_prefer_server_ciphers on;
    ssl_session_cache   shared:SSL:10m;

    # HSTS (enable after first successful HTTPS verification)
    add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;

    # Security headers (align with helmet in app)
    add_header X-Frame-Options DENY;
    add_header X-Content-Type-Options nosniff;
    add_header Referrer-Policy strict-origin-when-cross-origin;

    # Health endpoints (bypass rate limits at edge)
    location = /health {
      proxy_pass http://app_upstream/health;
      proxy_set_header Host $host;
    }
    location = /api/health {
      proxy_pass http://app_upstream/api/health;
      proxy_set_header Host $host;
    }

    # Static uploads (served directly when present)
    location /uploads/ {
      alias /app/uploads/;
      access_log off;
      expires 7d;
      add_header Cache-Control "public, max-age=604800";
    }

    # API and WebSocket proxy
    location / {
      proxy_pass http://app_upstream;
      proxy_http_version 1.1;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto https;
      proxy_set_header X-Forwarded-Host $host;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection $connection_upgrade;
      proxy_buffering off;

      # Timeouts suitable for SSE and long polling
      proxy_read_timeout 3600s;
      proxy_send_timeout 3600s;
    }

    # Dedicated SSE endpoint configuration
    location /api/events/ {
      proxy_pass http://app_upstream;
      proxy_http_version 1.1;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto https;
      proxy_set_header X-Forwarded-Host $host;

      # Server-Sent Events specific settings
      proxy_buffering off;
      gzip off;
      add_header Cache-Control "no-cache";
      add_header X-Accel-Buffering "no";
      proxy_read_timeout 3600s;
      proxy_send_timeout 3600s;
    }

    access_log /var/log/nginx/access.log;
    error_log  /var/log/nginx/error.log warn;
  }
}


